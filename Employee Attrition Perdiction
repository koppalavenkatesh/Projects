{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Attrition1",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOX077ycza7wc26RsGaF22P",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Jaswanth-gudiseva/Employee-attrition-prediction/blob/main/Attrition1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rQFFH_USktYx"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import classification_report, confusion_matrix\n",
        "from sklearn.ensemble import GradientBoostingClassifier\n",
        "from scipy import stats\n",
        "%matplotlib inline"
      ],
      "execution_count": 115,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IfSzioLYkxjv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 309
        },
        "outputId": "05bead37-b530-426d-afd9-474917664963"
      },
      "source": [
        "df = pd.read_csv('/content/train.csv')\n",
        "test = pd.read_csv('/content/test.csv')\n",
        "df.drop(['Id'], axis = 'columns', inplace = True)\n",
        "df.head()"
      ],
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Attrition</th>\n",
              "      <th>BusinessTravel</th>\n",
              "      <th>Department</th>\n",
              "      <th>DistanceFromHome</th>\n",
              "      <th>Education</th>\n",
              "      <th>EducationField</th>\n",
              "      <th>EmployeeNumber</th>\n",
              "      <th>EnvironmentSatisfaction</th>\n",
              "      <th>Gender</th>\n",
              "      <th>JobInvolvement</th>\n",
              "      <th>JobRole</th>\n",
              "      <th>JobSatisfaction</th>\n",
              "      <th>MaritalStatus</th>\n",
              "      <th>MonthlyIncome</th>\n",
              "      <th>NumCompaniesWorked</th>\n",
              "      <th>OverTime</th>\n",
              "      <th>PercentSalaryHike</th>\n",
              "      <th>PerformanceRating</th>\n",
              "      <th>StockOptionLevel</th>\n",
              "      <th>TotalWorkingYears</th>\n",
              "      <th>TrainingTimesLastYear</th>\n",
              "      <th>YearsAtCompany</th>\n",
              "      <th>YearsInCurrentRole</th>\n",
              "      <th>YearsSinceLastPromotion</th>\n",
              "      <th>YearsWithCurrManager</th>\n",
              "      <th>CommunicationSkill</th>\n",
              "      <th>Behaviour</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>30</td>\n",
              "      <td>0</td>\n",
              "      <td>Non-Travel</td>\n",
              "      <td>Research &amp; Development</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>Medical</td>\n",
              "      <td>571</td>\n",
              "      <td>3</td>\n",
              "      <td>Female</td>\n",
              "      <td>3</td>\n",
              "      <td>Laboratory Technician</td>\n",
              "      <td>4</td>\n",
              "      <td>Single</td>\n",
              "      <td>2564</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>36</td>\n",
              "      <td>0</td>\n",
              "      <td>Travel_Rarely</td>\n",
              "      <td>Research &amp; Development</td>\n",
              "      <td>12</td>\n",
              "      <td>4</td>\n",
              "      <td>Life Sciences</td>\n",
              "      <td>1614</td>\n",
              "      <td>3</td>\n",
              "      <td>Female</td>\n",
              "      <td>3</td>\n",
              "      <td>Manufacturing Director</td>\n",
              "      <td>3</td>\n",
              "      <td>Married</td>\n",
              "      <td>4663</td>\n",
              "      <td>9</td>\n",
              "      <td>Yes</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>55</td>\n",
              "      <td>1</td>\n",
              "      <td>Travel_Rarely</td>\n",
              "      <td>Sales</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>Medical</td>\n",
              "      <td>842</td>\n",
              "      <td>3</td>\n",
              "      <td>Male</td>\n",
              "      <td>3</td>\n",
              "      <td>Sales Executive</td>\n",
              "      <td>4</td>\n",
              "      <td>Single</td>\n",
              "      <td>5160</td>\n",
              "      <td>4</td>\n",
              "      <td>No</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>Travel_Rarely</td>\n",
              "      <td>Research &amp; Development</td>\n",
              "      <td>24</td>\n",
              "      <td>1</td>\n",
              "      <td>Life Sciences</td>\n",
              "      <td>2014</td>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>3</td>\n",
              "      <td>Research Scientist</td>\n",
              "      <td>4</td>\n",
              "      <td>Single</td>\n",
              "      <td>4108</td>\n",
              "      <td>7</td>\n",
              "      <td>No</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>37</td>\n",
              "      <td>0</td>\n",
              "      <td>Travel_Rarely</td>\n",
              "      <td>Research &amp; Development</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>Other</td>\n",
              "      <td>689</td>\n",
              "      <td>3</td>\n",
              "      <td>Male</td>\n",
              "      <td>3</td>\n",
              "      <td>Manufacturing Director</td>\n",
              "      <td>3</td>\n",
              "      <td>Married</td>\n",
              "      <td>9434</td>\n",
              "      <td>1</td>\n",
              "      <td>No</td>\n",
              "      <td>15</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>10</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Age  Attrition  ... CommunicationSkill Behaviour\n",
              "0   30          0  ...                  4         1\n",
              "1   36          0  ...                  2         1\n",
              "2   55          1  ...                  5         1\n",
              "3   39          0  ...                  4         1\n",
              "4   37          0  ...                  1         1\n",
              "\n",
              "[5 rows x 28 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vANw9ew0_XqT"
      },
      "source": [
        "#drop duplicates\n",
        "df.drop_duplicates(inplace=True)"
      ],
      "execution_count": 117,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KFUbEuiZ8Kyn"
      },
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "for column in df.columns:\n",
        "  if df[column].dtype == int:\n",
        "    continue\n",
        "  df[column] = LabelEncoder().fit_transform(df[column])"
      ],
      "execution_count": 118,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ylguQ52H8M7L"
      },
      "source": [
        "df.YearsAtCompany = np.sqrt(df.YearsAtCompany)\n",
        "df.TotalWorkingYears = np.sqrt(df.TotalWorkingYears)\n",
        "df.Age = pd.Series(stats.boxcox(df.Age)[0])\n",
        "df.MonthlyIncome = pd.Series(stats.boxcox(df.MonthlyIncome)[0])\n",
        "df.YearsSinceLastPromotion = np.sqrt(df.YearsSinceLastPromotion)"
      ],
      "execution_count": 119,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ahQDMbxuYvj-"
      },
      "source": [
        "X = df.drop(['Attrition'], axis = 1)\n",
        "y = df['Attrition']"
      ],
      "execution_count": 120,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IPif38Gg6KNy",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e7ac7b2a-76f4-4648-89ca-8c632df3c5d3"
      },
      "source": [
        "from sklearn.feature_selection import RFE\n",
        "gb_clf = GradientBoostingClassifier(n_estimators=1000, learning_rate=0.05, max_depth=7, random_state=0)\n",
        "rfe = RFE(gb_clf, 18)\n",
        "rfe = rfe.fit(X, y)\n",
        "print(rfe.support_)\n",
        "print(rfe.ranking_)"
      ],
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[ True False False  True False  True  True  True False  True  True  True\n",
            "  True  True  True  True  True False  True  True  True  True False  True\n",
            " False False False]\n",
            "[ 1  3  7  1  6  1  1  1  8  1  1  1  1  1  1  1  1  9  1  1  1  1  4  1\n",
            "  5  2 10]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4zdxfRBk6gcH"
      },
      "source": [
        "cols = [col for col in X[X.columns[rfe.support_]].columns]\n",
        "cols.remove('Age')\n",
        "cols.remove('EmployeeNumber')\n",
        "cols.remove('PercentSalaryHike')\n",
        "cols.remove('MonthlyIncome')\n",
        "cols.remove('JobRole')\n",
        "\n",
        "X = X[cols]"
      ],
      "execution_count": 122,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QIcfh01t6kv2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c177a425-204c-4bae-8f19-f3907e711b83"
      },
      "source": [
        "import statsmodels.api as sm\n",
        "logit_model=sm.Logit(y,X)\n",
        "result=logit_model.fit()\n",
        "print(result.summary2())"
      ],
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Optimization terminated successfully.\n",
            "         Current function value: 0.332351\n",
            "         Iterations 7\n",
            "                            Results: Logit\n",
            "=======================================================================\n",
            "Model:                Logit              Pseudo R-squared:   0.235     \n",
            "Dependent Variable:   Attrition          AIC:                690.7016  \n",
            "Date:                 2021-07-20 08:53   BIC:                754.5024  \n",
            "No. Observations:     1000               Log-Likelihood:     -332.35   \n",
            "Df Model:             12                 LL-Null:            -434.66   \n",
            "Df Residuals:         987                LLR p-value:        3.6221e-37\n",
            "Converged:            1.0000             Scale:              1.0000    \n",
            "No. Iterations:       7.0000                                           \n",
            "-----------------------------------------------------------------------\n",
            "                         Coef.  Std.Err.    z    P>|z|   [0.025  0.975]\n",
            "-----------------------------------------------------------------------\n",
            "DistanceFromHome         0.0458   0.0118  3.8695 0.0001  0.0226  0.0689\n",
            "EducationField           0.1497   0.0739  2.0255 0.0428  0.0048  0.2945\n",
            "EnvironmentSatisfaction -0.2514   0.0860 -2.9221 0.0035 -0.4200 -0.0828\n",
            "JobInvolvement          -0.3137   0.1215 -2.5812 0.0098 -0.5519 -0.0755\n",
            "JobSatisfaction         -0.2311   0.0866 -2.6684 0.0076 -0.4009 -0.0614\n",
            "MaritalStatus            0.6571   0.1754  3.7464 0.0002  0.3134  1.0009\n",
            "NumCompaniesWorked       0.1377   0.0427  3.2228 0.0013  0.0540  0.2214\n",
            "OverTime                 1.7844   0.2085  8.5595 0.0000  1.3758  2.1930\n",
            "StockOptionLevel        -0.1425   0.1521 -0.9369 0.3488 -0.4406  0.1556\n",
            "TotalWorkingYears       -0.5474   0.1284 -4.2644 0.0000 -0.7990 -0.2958\n",
            "TrainingTimesLastYear   -0.1028   0.0775 -1.3270 0.1845 -0.2547  0.0491\n",
            "YearsAtCompany          -0.2860   0.1488 -1.9218 0.0546 -0.5776  0.0057\n",
            "YearsSinceLastPromotion  0.3477   0.1303  2.6686 0.0076  0.0923  0.6031\n",
            "=======================================================================\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RVosQVhPlHGK"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = .25, random_state = 41)"
      ],
      "execution_count": 124,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vdkzx3Mv9HYx"
      },
      "source": [
        "scaler = MinMaxScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)\n",
        "\n",
        "from sklearn.metrics import roc_auc_score"
      ],
      "execution_count": 125,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Nde5Y1GW-m_u",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1fe4f4e2-296c-4d2c-e27d-9a9c2bc4f36b"
      },
      "source": [
        "gb_clf = GradientBoostingClassifier(n_estimators=1000, learning_rate=0.1, max_features=9, max_depth=7, random_state=0)\n",
        "gb_clf.fit(X_train, y_train)\n",
        "roc_auc_score(gb_clf.predict(X_test), y_test)"
      ],
      "execution_count": 126,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7624976058226394"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 126
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6nsYso28Gy9u",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "62ef01e1-d657-44c0-fd3f-40fa5b7a1d66"
      },
      "source": [
        "from sklearn.model_selection import cross_val_score\n",
        "scores = cross_val_score(GradientBoostingClassifier(n_estimators=1000,learning_rate=0.05, max_features=9, max_depth=7),X, y, cv=5, scoring= 'roc_auc')\n",
        "scores.mean()"
      ],
      "execution_count": 127,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7373610964356156"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 127
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "06lyvaKyGSNo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "668d10f7-967b-4f83-ffa0-0953319f76ea"
      },
      "source": [
        "from sklearn.metrics import roc_curve\n",
        "logit_roc_auc = roc_auc_score(y_test, gb_clf.predict(X_test))\n",
        "fpr, tpr, thresholds = roc_curve(y_test, gb_clf.predict_proba(X_test)[:,1])\n",
        "plt.figure()\n",
        "plt.plot(fpr, tpr, label='Logistic Regression (area = %0.2f)' % logit_roc_auc)\n",
        "plt.plot([0, 1], [0, 1],'r--')\n",
        "plt.xlim([0.0, 1.0])\n",
        "plt.ylim([0.0, 1.05])\n",
        "plt.xlabel('False Positive Rate')\n",
        "plt.ylabel('True Positive Rate')\n",
        "plt.title('Receiver operating characteristic')\n",
        "plt.legend(loc=\"lower right\")\n",
        "plt.savefig('ROC')\n",
        "plt.show()"
      ],
      "execution_count": 128,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M8OaewOF1UhH"
      },
      "source": [
        "test = pd.read_csv('/content/test.csv')\n",
        "test.drop('Id', axis = 1,inplace = True)\n",
        "for column in test.columns:\n",
        "  if test[column].dtype == int:\n",
        "    continue\n",
        "  test[column] = LabelEncoder().fit_transform(test[column])\n",
        "\n",
        "test.YearsAtCompany = np.sqrt(test.YearsAtCompany)\n",
        "test.TotalWorkingYears = np.sqrt(test.TotalWorkingYears)\n",
        "test.Age = pd.Series(stats.boxcox(test.Age)[0])\n",
        "test.MonthlyIncome = pd.Series(stats.boxcox(test.MonthlyIncome)[0])\n",
        "test.YearsSinceLastPromotion = np.sqrt(test.YearsSinceLastPromotion)\n",
        "\n",
        "test = test[cols]\n",
        "# test = pd.get_dummies(test, columns=[ 'MaritalStatus'], drop_first=True)"
      ],
      "execution_count": 129,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BCfBs7661gel"
      },
      "source": [
        "sol = gb_clf.predict_proba(test)\n",
        "sol1 = pd.DataFrame(sol[:,1:])\n",
        "sol1['Id'] = np.arange(1, 471)\n",
        "sol1['Attrition'] = sol1[0]\n",
        "sol1.drop(0, axis = 1, inplace = True)"
      ],
      "execution_count": 130,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FJvujDmE1jtQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "468a4d78-d431-4636-b455-9fd9fffe865b"
      },
      "source": [
        "from IPython.display import HTML\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import base64\n",
        "\n",
        "# function that takes in a dataframe and creates a text link to  \n",
        "# download it (will only work for files < 2MB or so)\n",
        "def create_download_link(df, title = \"Download CSV file\", filename = \"data.csv\"):  \n",
        "    csv = df.to_csv()\n",
        "    b64 = base64.b64encode(csv.encode())\n",
        "    payload = b64.decode()\n",
        "    html = '<a download=\"{filename}\" href=\"data:text/csv;base64,{payload}\" target=\"_blank\">{title}</a>'\n",
        "    html = html.format(payload=payload,title=title,filename=filename)\n",
        "    return HTML(html)\n",
        "\n",
        "# create a random sample dataframe\n",
        "df = sol1\n",
        "\n",
        "# create a link to download the dataframe\n",
        "create_download_link(df)"
      ],
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<a download=\"data.csv\" href=\"data:text/csv;base64,\" target=\"_blank\">Download CSV file</a>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 131
        }
      ]
    }
  ]
}
